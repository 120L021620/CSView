import{_ as n,W as i,X as r,Y as t,Z as o,$ as s,a1 as a,C as c}from"./framework-17a5d3b6.js";const l={},d={id:"osi的7层网络模型",tabindex:"-1"},_=t("a",{class:"header-anchor",href:"#osi的7层网络模型","aria-hidden":"true"},"#",-1),h=a("<p>分为应用层、表示层、会话层、运输层、网络层、链路层、物理层。</p><ul><li>应用层(数据)：确定进程之间<strong>通信的性质</strong>以及满足用户需要以及提供网络和用户应用，为应用程序提供服务，DNS，HTTP，HTTPS，DHCP，FTP，POP3(Post Office Protocol)、SMTP(Simple Mail Transfer Protocol)都是这层的协议。</li><li>表示层(数据)：主要解决用户信息的<strong>语法表示</strong>问题，表示层提供各种<strong>用于应用层数据的编码和转换功能</strong>,确保一个系统的应用层发送的数据能被另一个系统的应用层识别，<strong>如数据转换，压缩和加密，解密</strong>。</li><li>会话层(数据)：会话层就是负责<strong>建立、管理和终止表示层实体之间的通信会话</strong>。该层的通信由不同设备中的应用程序之间的服务请求和响应组成。 比如服务器验证用户登录就是在会话层。</li><li>传输层(段)：实现网络不同主机上的用户进程之间的数据通信，可靠与不可靠的传输，传输层的错误检测，流量控制，拥塞控制。TCP UDP就这层。</li><li>网络层(包)：本层通过<strong>IP寻址</strong>来建立两个节点之间的连接，为源端的运输层送来的分组，<strong>选择合适的路由和交换节点</strong>，正确无误地按照地址传送给目的端的运输层。IP就是这层。</li><li>数据链路层(帧)：将上层数据封装成帧，用<strong>MAC</strong>地址访问媒介，并由错误检测和修正</li><li>物理层(比特流)：设备之间比特流的传输，物理接口，电气特性(常用设备有(各种物理设备)集线器、中继器、调制解调器、网线、双绞线、同轴电缆。这些都是物理层的传输介质。)</li></ul>",2),g={id:"tcp-ip的四层网络模型",tabindex:"-1"},p=t("a",{class:"header-anchor",href:"#tcp-ip的四层网络模型","aria-hidden":"true"},"#",-1),f=t("p",null,"TCP四层模型是我们实践过程中发现比较合理的分层，虽然我们实际过程中都没有按OSI分为七层，但是OSI对我们实践过程分层有着指导性的意义。",-1),P=t("figure",null,[t("img",{src:"https://pic.imgdb.cn/item/63ef20b3f144a01007340007.jpg",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),m={id:"五层因特网协议栈",tabindex:"-1"},u=t("a",{class:"header-anchor",href:"#五层因特网协议栈","aria-hidden":"true"},"#",-1),x=t("p",null,"应用层、运输层、网络层、链路层、物理层。",-1);function T(S,C){const e=c("Badge");return i(),r("div",null,[t("h3",d,[_,o(" OSI的7层网络模型？"),s(e,{text:"重要",type:"danger"})]),h,t("h3",g,[p,o(" TCP/IP的四层网络模型？"),s(e,{text:"重要",type:"danger"})]),f,P,t("h3",m,[u,o(" 五层因特网协议栈？"),s(e,{text:"了解",type:"info"})]),x])}const y=n(l,[["render",T],["__file","summary.html.vue"]]);export{y as default};
